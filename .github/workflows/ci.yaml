name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install package with test deps
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip
          # Show repo contents to confirm pyproject.toml is at repo root
          pwd; ls -la
          # Install your package + test extras (quote to avoid shell globbing)
          pip install -e '.[test]' || true
          # Sanity checks
          python -c "import sys; print('Python:', sys.version)"
          python - <<'PY'
          import importlib.util
          print('Has numpy?', importlib.util.find_spec('numpy') is not None)
          print('Has pytest?', importlib.util.find_spec('pytest') is not None)
          PY
          # Fallbacks if extras didnâ€™t pull them (defensive)
          pip show numpy || pip install --upgrade numpy
          pip show pytest || pip install --upgrade pytest


      - name: Verify runtime deps explicitly
        run: |
          python - <<'PY'
          import numpy, sys
          print('NumPy OK:', numpy.__version__, 'on', sys.version.split()[0])
          PY

      - name: Run mypy
        run: python -m mypy --ignore-missing-imports pt-sim/pt_sim


      - name: Run mypy type checks
        run: |
          python -m mypy --ignore-missing-imports pt-sim/pt_sim
      
      - name: Force-install test deps
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip
          pip install --upgrade numpy pytest
          python - <<'PY'
          import importlib.util, sys
          print('Python:', sys.version)
          print('Has numpy?', importlib.util.find_spec('numpy') is not None)
          print('Has pytest?', importlib.util.find_spec('pytest') is not None)
          PY

      - name: Run pytest
        run: |
          python -c "import numpy, sys; print('NumPy:', numpy.__version__, 'on', sys.version.split()[0])"
          pytest -q
