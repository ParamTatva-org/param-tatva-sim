name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e pt-sim
          pip install pytest ruff mypy mkdocs mkdocs-material types-PyYAML

      - name: Lint (Ruff)
        run: python -m ruff check pt-sim/pt_sim

      - name: Type check (MyPy)
        run: python -m mypy --ignore-missing-imports pt-sim/pt_sim
      
      - name: Force-install test deps
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip
          pip install --upgrade numpy pytest
          python - <<'PY'
          import importlib.util, sys
          print('Python:', sys.version)
          print('Has numpy?', importlib.util.find_spec('numpy') is not None)
          print('Has pytest?', importlib.util.find_spec('pytest') is not None)
          PY

      - name: Cargo test
        run: cargo test --verbose
        
      - name: Install deps
        run: python -m pip install -U pip pydantic numpy matplotlib pytest
      
      - name: Validate PTK kernel
        run: python ptk_pydantic_validator.py ptk.v1.json

      - name: Run unit + physics tests
        run: pytest -q

      - name: Run toy demo (electron â†’ ECAL)
        if: ${{ false }}
        run: |
          mkdir -p out
          python -m pt_sim.demos.demo_run configs/demo_electron.yaml out


      - name: Upload demo output (only on 3.11)
        if: ${{ matrix.python-version == '3.11' }}
        uses: actions/upload-artifact@v4
        with:
          name: demo-output
          path: out/
          compression-level: 6
          if-no-files-found: warn
